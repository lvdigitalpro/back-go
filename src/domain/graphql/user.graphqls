

type User {
    user_id: String!
    name: String!
    last_name: String!
    birth_date: String!
    email: String!
    password: String!
    createdAt: String!
    updatedAt: String
    type: Int!
    ir: String!
    nrle: String
    enterpriseName: String
    cod_project: Int
}

input InputNewUser{
    name: String!
    last_name: String!
    birth_date: String!
    email: String!
    password: String!
    password_confirmation:String!
    type: Int!
    ir: String!
    nrle: String
    enterpriseName: String
}

input InputUpdateUser{
    user_id: String!
    name: String!
    last_name: String!
    birth_date: String!
    email: String!
    password: String!
    password_confirmation:String!
    type: Int!
    ir: String!
    created_at: String!
    nrle: String
    enterpriseName: String
    old_password: String
}



type Query {
    getUsers: [User!] @auth
    getUser(user_id: String!): User! @auth
    getUserByEmail(email: String!): User!
    getUserByIR(ir: String!): User! @auth
    getUserByProject(cod_project: Int!): User! @auth
}

type Mutation {
    newUser(input: InputNewUser!): String!
    updateUser(input: InputUpdateUser!): String! @auth
}