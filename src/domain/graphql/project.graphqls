enum Status{
    QUEUE
    IN_REVIEW
    IN_PROGRESS
    DONE
}

enum Type {
    WEB
    MOBILE
    DESKTOP
    SYSTEM
    UI_UX
    OTHER
}

type Project {
    cod_project: Int!
    type: Type!
    status: Status!
    name: String!
    description: String!
    created_at: String!
    updated_at: String
    start_date: String
    end_date: String
    user_id: String!
}

input InputNewProject {
    type: Type!
    name: String!
    description: String!
    user_id: String!
}

input InputUpdateProject {
    type: Type!
    name: String!
    description: String!
    cod_project: Int!
}

input InputDeleteProject {
    cod_project: Int!
    password: String!
    password_confirmation: String!
}


extend type Query {
    getProjects: [Project!] @auth
    getProject(cod_project: Int!): Project! @auth
}

extend type Mutation {
    newProject(input: InputNewProject!): String! @auth
    updateProject(input: InputUpdateProject!): String! @auth
    deleteProject(input: InputDeleteProject!): String! @auth
   
}